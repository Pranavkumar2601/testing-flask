
from flask import Flask, render_template, request, redirect, url_for
import pandas as pd
import joblib

app = Flask(__name__)

# Load the dataset
dataset = pd.read_csv("Odi_bating.csv")

# Load the trained model
# model = joblib.load('model.pkl')

def get_recommendation(player_name, opposition_team):
    # Filter the dataset to get player performances against the specified opposition team
    player_performance = dataset[(dataset['Player Name'] == player_name) & (dataset['Opposition Team'] == opposition_team)]
    
    if player_performance.empty:
        return "No data available for the specified player and opposition team", ""
    
    
    recommended_player = dataset[dataset['Opposition Team'] == opposition_team].iloc[0]['Player Name']
    reason = "Highest average runs against the specified opposition team"
    
    return recommended_player, reason


@app.route('/')
def home():
    return render_template('home.html')

@app.route('/form', methods=['GET', 'POST'])
def form():
    if request.method == 'POST':
        # Retrieve form data
        player_name = request.form['player_name']
        opposition_team = request.form['opposition_team']
        
        # Perform prediction
        recommended_player, reason = get_recommendation(player_name, opposition_team)
        
        # Redirect to result page with prediction
        return redirect(url_for('result', player=recommended_player, reason=reason))
    return render_template('form.html')



@app.route('/result')
def result():
    player = request.args.get('player')
    reason = request.args.get('reason')
    return render_template('result.html', player=player, reason=reason)

if __name__ == '__main__':
    app.run(debug=True)

##############################################################################################################
# import pandas as pd
# from flask import Flask, render_template, request, redirect, url_for
# import joblib
# import ipywidgets as widgets
# from IPython.display import display

# app = Flask(__name__)

# # Define the full path to the CSV file
# # csv_file_path = os.path.join(os.path.dirname(__file__), 'odi_bating.csv')

# # Load the dataset
# dataset = pd.read_csv("FinalOdiBatting.csv")

# dataset['HS'] = dataset['HS'].str.replace('*', '')

# # Convert 'HS' column to numeric, errors='coerce' will replace non-numeric values with NaN
# dataset['HS'] = pd.to_numeric(dataset['HS'], errors='coerce')

# # Replace NaN values with 0
# dataset['HS'].fillna(0, inplace=True)


# # Load the trained KNN model
# knn_model = joblib.load('model.pkl')

# def get_recommendation(player_name, opposition_team):
#     # Filter the dataset to get player performances against the specified opposition team
#     player_performance = dataset[(dataset['Player Name'] == player_name) & (dataset['Opposition Team'] == opposition_team)]
    
#     if player_performance.empty:
#         return "No data available for the specified player and opposition team", ""
    
#     # Assuming you have performed any necessary feature extraction and preprocessing
#     # Extract features from player_performance to use as input for the model
#     # For illustration purposes, let's say you want to use the specified features
#     selected_features = ['Runs', 'HS', 'Ave', 'SR', '100', '50', '4s', '6s']
#     features = player_performance[selected_features].values
    
#     # Make prediction using the trained model
#     predicted_player = knn_model.predict(features)
    
#     # For now, let's just return the predicted player without any reasoning
#     return predicted_player[0], "Recommended based on the trained model"


# @app.route('/')
# def home():
#     return render_template('home.html')


# @app.route('/form', methods=['GET', 'POST'])
# def form():
#     if request.method == 'POST':
#         # Retrieve form data
#         player_name = request.form['player_name']
#         opposition_team = request.form['opposition_team']
        
#         # Perform prediction
#         recommended_player, reason = get_recommendation(player_name, opposition_team)
        
#         # Redirect to result page with prediction
#         return redirect(url_for('result', player=recommended_player, reason=reason))
#     return render_template('form.html')


# @app.route('/result')
# def result():
#     player = request.args.get('player')
#     reason = request.args.get('reason')
#     return render_template('result.html', player=player, reason=reason)


# if __name__ == '__main__':
#     app.run(debug=True)



# #########################################################################################
# from flask import Flask, render_template, request, redirect, url_for
# import pandas as pd
# import joblib

# app = Flask(__name__)

# # Load the trained model
# model = joblib.load('model.pkl')

# def get_recommendation(player_name, opposition_team):
#     # Prepare input data as a DataFrame
#     data = {
#         'Mat': [2,6,4,3,3,4,4,3,3,2,6,1,3,3,4,4,3,3,3,7,3,4,3,4,3,3,3,6,6,7,3,4,4,7,3,4,3,3,3,3,3,3,6,3,1,2,3,3,3,3,3,3,3,3,3,4,4,4,3,7,3,4,4,3,3,3,3,3,3,4,3,4,3,3,3,2,7,3,1,3,2,6,1,4,3,6,3,6,2,3,3,4,7,2,3,3,3,3,3,3,3,4,6,4,2,4,5,6,3,3,3,2,2,2,5,3,3,4,4,2,3,2,3,3,3,3,3,3,3,4,2,3,3,3,3,6,4,3,4,3,3,3,3,2,2,4,4,4,2,3,4,4,3,3,2,3,3,3,2,2,2,3,2,3,4,2,2,2,2,3,3,1,4,3,2,3,3,2,3,3,2,2,3,2,3,2,3,3,2,2,3,2,2,3,6,4,4,4,2,3,3,2,3,4,4,2,3,4,3,3,2,4,4,3,3,3,3,3,4,3,2,2,3,2,2,3,3,4,2,3,2,3,4,2,4,3,4,1,6,3,3,3,1,3,2,4,2,2,2,4,3,2,4,2,3,3,1,2,1,2,2,3,3,2,2,2,3,3,6,2,2,2,2,2,1,4,3,2,2,4,2,3,3,3,3,2,3,2,2,2,4,3,3,2,3,1,3,3,2,3,1,2,3,2,4,3,2,3,3,2,2,3,3,1,1,2,2,2,2,4,3,3,4,3,4,1,3,4,3,3,3,3,3,2,3,3,2,4,2,4,2,2,2,3,2,2,1,2,3,3,2,4,3,2,3,4,2,2,3,2,2,2,3,3,1,1,3,3,4,1,3,3,3,7,3,2,1,2,2,2,3,3,3,3,1,2,1,2,3,4,2,3,4,2,3,2,4,3,1,2,3,2,2,1,3,2,1,3,2,2,2,2,2,3,3,2,2,2,1,2,4,2,3,1,3,2,2,2,1,3,2,2,1,4,2,2,6,2,2,2,1,1,2,3,1,3,1,2,2,1,1,2,3,2,3,2,4,2,1,3,2,3,1,1,2,3,3,1,2,2,2,2,1,3,2,2,3,3,3,2,2,2,3,3,3,2,3,1,3,2,2,2,3,1,2,3,2,2,4,3,2,1,3,3,4,2,2,4,3,1,4,2,4,1,1,3,1,3,2,1,2,1,3,2,3,2,2,2,2,2,7,2,2,2,2,2,2,3,5,2,2,1,2,2,2,2,1,3,5,2,2,2,2,2,1,2,1,3,3,2,1,2,2,2,1,1,3,1,1,2,2,1,1,3,2,2,1,3,1,2,3,2,1,3,3,3,3,2,1,1,1,1,1,3,2,2,2,1,2,3,1,2,1,1,2,2,4,1,2,1,2,1,3,2,2,3,3,1,2,1,4,3,2,1,3,1,1,1,2,2,2,2,2,2,1,1,3,1,2,3,2,3,2,2,2,2,2,3,2,2,2,1,1,4,1,1,1,1,2,1,2,3,2,2,3,2,1,1,1,2,1,3,1,1,1,1,2,2,2,3,3,2,1,1,1,3,1,2,1,1,1,1,1,1,2,2,3,1,2,2,2,1,2,1,1,2,2,1,2,1,3,1,2,2,1,1,2,1,2],  # Include all data points for each feature
#         'Inns': [6,4,3,3,4,4,3,3,2,5,1,3,3,4,4,3,3,3,7,3,3,3,4,3,3,2,5,4,7,3,4,4,7,3,4,3,3,3,3,3,3,5,3,1,2,2,3,3,3,2,3,3,3,3,4,4,4,3,7,2,3,4,3,3,2,3,3,3,3,3,4,3,3,3,2,7,3,1,3,2,5,1,3,3,3,3,6,2,3,3,4,7,2,3,3,3,3,3,2,3,4,4,4,2,4,5,5,3,3,3,2,2,2,5,3,2,4,4,2,2,2,3,3,3,3,3,2,2,3,1,3,3,3,3,5,3,3,4,2,3,3,3,2,2,3,3,4,2,3,4,4,3,2,2,3,3,3,2,2,2,3,2,3,4,2,2,2,2,3,3,1,4,3,2,3,3,2,3,3,2,2,2,2,2,2,3,3,2,2,3,2,2,3,6,4,4,3,2,3,3,2,3,3,4,2,3,3,3,3,2,4,4,2,3,3,3,2,3,3,2,2,3,2,2,3,3,3,2,3,1,3,4,2,4,2,3,1,3,3,2,3,1,3,2,3,2,2,2,3,3,2,4,1,3,3,1,2,1,2,2,3,2,2,2,2,3,2,4,2,2,2,2,2,1,3,2,2,2,4,2,2,2,2,3,2,3,2,2,2,4,3,3,2,2,1,3,3,1,3,1,2,3,2,3,3,2,2,3,2,2,3,2,1,1,2,2,1,2,2,3,3,4,3,3,1,2,3,3,2,3,3,1,2,3,3,2,4,2,3,2,2,2,3,2,2,1,2,3,2,1,4,3,2,2,3,2,1,3,2,2,2,2,3,1,1,3,3,3,1,2,2,3,4,2,2,1,1,2,2,3,2,2,2,1,2,1,1,2,4,2,2,2,2,3,2,3,2,1,1,3,1,2,1,3,2,1,3,2,1,1,2,2,2,3,2,2,2,1,2,2,2,2,1,3,2,1,2,1,2,2,2,1,4,2,2,3,2,1,2,1,1,1,3,1,3,1,1,2,1,1,2,2,2,2,2,3,1,1,2,1,2,1,1,2,3,3,1,1,2,1,1,1,2,2,1,2,3,2,2,2,1,3,2,3,2,1,1,2,2,2,2,2,1,1,2,1,2,3,2,1,1,2,1,4,2,1,2,1,1,1,2,1,1,1,2,1,1,2,1,1,1,3,2,1,1,1,2,2,2,4,1,1,2,2,1,1,2,2,1,1,1,1,1,2,2,1,2,4,2,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,2,2,1,1,1,2,1,1,3,1,1,2,2,1,3,2,1,3,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,2,1,2,2,1,1,2,1,2,1,1,2,1,1,2,1,1,1,1,1,1,2,2,1,1,1,2,1,1,1,2,1,1,1,1,2,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         'NO':[2,2,1,0,1,1,1,0,1,1,0,0,0,0,0,1,1,2,0,0,0,0,1,1,0,1,2,1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,1,0,1,1,0,2,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,1,3,0,2,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,2,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,2,0,1,0,0,1,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,2,0,0,0,0,1,2,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,2,0,0,0,2,0,3,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,2,0,0,2,1,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,0,0,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,2,0,0,1,0,2,0,0,2,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,1,1,0,2,0,1,2,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,0,1,0,1,3,0,0,2,0,0,0,0,1,0,1,0,1,0,0,1,0,1,1,1,1,1,0,2,0,0,0,1,1,2,1,0,1,1,0,1,0,1,0,1,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,2,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         'Runs':[468,293,283,278,277,261,261,240,226,217,210,208,207,203,195,195,194,191,190,189,188,186,182,182,180,176,171,170,169,166,165,165,165,164,159,159,157,155,154,153,149,147,146,144,144,144,142,141,141,141,139,138,137,136,134,133,132,132,129,129,129,128,128,127,126,126,125,125,124,124,123,123,123,123,123,122,122,121,121,120,119,119,118,118,118,117,116,116,116,115,115,113,112,111,111,111,110,110,110,109,109,109,108,108,106,105,104,103,103,103,103,102,102,101,101,100,100,99,98,98,96,95,95,95,94,94,94,93,91,91,91,90,89,89,89,88,88,88,87,87,87,86,86,86,85,85,84,84,83,83,82,82,82,80,80,80,79,78,78,78,77,77,77,77,76,75,75,73,73,72,72,71,71,71,70,70,69,69,69,68,68,68,68,68,67,67,67,66,66,66,66,65,64,64,63,63,63,63,62,62,62,62,61,60,60,60,60,60,59,59,59,59,59,59,58,58,58,57,57,56,56,56,56,56,55,55,55,55,55,55,54,53,53,53,52,52,52,52,52,52,52,51,51,51,51,50,50,50,49,49,49,49,49,49,49,48,48,48,48,47,47,47,47,47,47,46,45,45,45,44,44,44,44,44,44,43,43,43,42,42,42,42,42,42,41,41,41,41,40,40,40,39,39,39,39,39,39,38,38,38,38,38,38,37,37,37,37,36,36,36,36,36,36,35,35,35,35,35,35,35,34,34,34,34,34,34,34,33,33,33,33,33,32,32,32,32,32,32,32,31,31,31,31,31,31,31,30,30,30,30,29,29,29,29,29,28,28,27,27,27,27,26,26,26,26,26,25,25,25,25,25,25,25,25,25,25,24,24,24,23,23,23,23,23,23,23,22,22,22,22,21,21,21,21,21,21,20,20,20,20,20,20,20,20,19,19,19,19,19,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         'HS':[208,110,166,162,133,101,131,152,175,138,210,106,116,119,75,94,81,113,94,118,140,101,81,77,109,101,52,145,63,70,72,95,53,85,96,103,101,132,111,101,79,50,70,144,128,100,83,100,75,92,81,74,80,134,56,46,115,58,88,80,107,54,110,113,74,68,114,77,56,58,55,93,85,113,94,54,60,121,108,77,57,119,75,86,57,75,54,66,75,50,85,77,86,76,77,58,50,64,93,82,42,51,81,66,60,35,50,51,72,63,59,72,66,64,49,59,54,60,81,73,90,71,77,73,38,51,94,83,56,91,50,70,51,54,34,36,79,65,84,44,60,80,51,71,47,32,50,71,45,29,33,64,54,50,43,49,45,61,39,51,36,74,41,67,56,52,74,53,37,36,72,25,32,60,58,67,50,35,52,37,41,66,62,43,59,41,37,50,57,40,45,47,32,22,31,31,40,57,25,42,38,49,29,51,43,42,41,51,48,40,25,29,43,49,42,43,45,42,37,40,33,28,31,33,29,36,27,47,41,55,35,20,47,36,36,19,52,36,30,44,34,51,29,36,30,25,36,36,33,20,38,23,49,27,38,48,27,48,46,35,23,33,47,42,29,24,45,24,29,23,32,43,34,44,30,28,30,28,34,37,30,34,35,24,23,22,26,34,38,20,22,23,20,31,39,17,33,38,21,38,36,34,22,22,18,33,23,16,18,29,22,34,36,35,24,25,35,21,24,32,22,19,28,33,34,28,23,14,20,21,29,33,24,17,21,19,14,23,20,28,19,29,17,31,22,31,29,17,25,30,12,14,25,22,25,18,28,27,27*,26,19,26,20,26,26,21,13,17,25,17,15,14,16,13,15,25,24,21,17,20,16,13,12,23,14,23,22,22,10,14,16,20,18,11,21,10,14,20,20,18,20,19,20,13,10,19,7,15,19,18,9,18,10,8,18,12,18,18,18,14,17,12,17,16,9,17,11,17,10,14,15,17,10,10,12,8,14,16,14,15,15,15,15,15,8,14,14,7,14,14,13,14,11,11,9,11,14,14,10,14,13,13,13,8,10,7,13,12,12,12,12,12,10,11,12,11,7,6,7,11,11,11,8,9,11,11,11,11,11,7,10,8,10,10,6,10,10,5,8,10,10,10,9,5,9,9,5,8,8,8,7,8,8,8,5,8,8,8,8,8,8,7,5,7,7,7,7,7,7,7,6,6,4,5,6,6,5,6,6,6,6,6,5,5,4,5,3,3,5,5,5,5,5,5,5,5,5,4,2,4,4,4,4,4,4,4,4,4,2,4,4,3,3,3,3,3,2,3,3,3,2,3,2,3,3,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         'Ae':[117,146.5,141.5,92.66,92.33,87,130.5,80,226,54.25,210,69.33,69,50.75,48.75,97.5,97,191,27.14,63,62.66,62,60.66,91,60,176,57,56.66,24.14,55.33,41.25,55,27.5,54.66,53,79.5,52.33,51.66,51.33,51,49.66,49,73,144,144,144,47.33,141,47,70.5,46.33,69,45.66,45.33,33.5,44.33,33,44,21.5,64.5,64.5,32,64,42.33,63,42,62.5,41.66,41.33,62,30.75,41,61.5,41,61.5,20.33,40.66,0,60.5,60,23.8,0,59,0,39.33,117,23.2,58,58,38.33,38.33,16.14,112,37,37,37,36.66,55,55,36.33,27.25,36.33,27,54,26.5,21,20.8,34.33,34.33,51.5,51.5,51,51,20.2,33.66,50,33.33,24.75,49,49,96,31.66,31.66,31.66,31.33,47,0,93,45.5,91,30.33,30,44.5,29.66,22.25,29.33,29.33,22,43.5,29,29,28.66,86,86,28.33,42.5,21,84,41.5,20.75,20.5,41,41,40,26.66,26.66,39.5,39,39,78,25.66,38.5,25.66,25.66,38,37.5,37.5,73,24.33,24,72,17.75,23.66,71,35,35,34.5,23,34.5,34,34,34,34,34,33.5,33.5,22.33,33,33,22,33,32.5,21.33,10.66,15.75,15.75,21,31.5,20.66,20.66,31,31,20.33,15,30,20,20,20,19.66,29.5,14.75,19.66,29.5,29.5,19.33,19.33,29,19,19,28,56,18.66,28,28,18.33,18.33,27.5,27.5,18.33,0,18,17.66,26.5,26.5,26,17.33,52,17.33,17.33,26,52,51,17,25.5,17,25,25,25,16.33,16.33,49,24.5,49,16.33,16.33,48,24,48,24,23.5,15.66,23.5,23.5,23.5,23.5,15.33,22.5,11.25,45,22,44,44,22,0,14.66,21.5,21.5,21.5,10.5,21,21,21,42,21,20.5,13.66,20.5,20.5,0,10,20,13,19.5,39,39,0,13,38,12.66,38,19,12.66,0,12.33,12.33,18.5,18.5,12,18,18,12,18,36,0,17.5,17.5,35,17.5,35,11.66,11.33,11.33,11.33,11.33,34,17,11.33,11,16.5,16.5,11,33,16,10.66,16,16,16,16,10.66,15.5,15.5,31,31,15.5,15.5,0,15,15,15,30,7.25,9.66,14.5,14.5,9.66,14,28,9,27,13.5,27,13,8.66,26,26,26,8.33,8.33,25,0,12.5,0,8.33,12.5,12.5,25,24,12,12,7.66,11.5,23,23,23,23,0,22,11,11,11,10.5,0,21,7,10.5,10.5,10,0,20,10,0,10,20,6.66,19,19,6.33,9.5,19,0,9,9,9,6,9,18,9,0,9,18,9,9,17,5.66,8.5,17,8.5,17,8.5,8.5,8.5,0,4.25,8,16,5.33,8,16,7.5,15,15,15,15,15,4.66,14,14,7,14,14,0,7,7,7,7,4.66,0,14,14,14,6.5,13,13,6.5,4.33,4.33,13,12,6,12,12,12,0,12,0,12,4,5.5,5.5,5.5,0,5.5,5.5,5.5,5.5,0,0,11,11,11,5,5,10,10,5,0,10,3.33,0,10,10,10,9,4.5,4.5,9,0,0,8,8,4,8,8,8,8,8,8,8,8,8,8,2.33,7,0,7,7,3.5,3.5,3.5,1.75,6,6,3,3,6,0,3,0,6,6,6,0,0,2.5,0,5,5,2.5,5,5,5,0,5,5,5,5,5,2.5,2,4,4,0,4,0,0,0,0,0,2,4,4,3,3,1.5,3,3,1.5,0,3,3,1.5,0,0,1.5,3,3,1.5,2,2,2,0,2,0,1,0,2,2,0,2,0,0,0,0,2,2,0,2,1,1,1,0,0,1,1,0,1,1,1,1,0,0.5,0,1,1,0,0,1,1,0,1,0.5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         'BF':[409,300,206,276,284,268,250,215,165,225,131,203,169,156,242,208,148,171,330,184,130,173,230,210,157,170,238,168,159,212,195,211,286,207,204,146,203,163,163,158,209,181,140,118,142,86,137,127,152,119,191,133,113,135,140,146,137,172,183,135,116,194,127,112,155,140,166,109,184,100,183,139,146,117,132,168,93,137,118,126,125,61,92,103,113,105,145,134,153,163,175,188,141,98,157,154,129,138,108,147,156,108,159,136,105,169,121,85,132,103,143,101,140,166,97,80,120,96,95,111,91,114,118,108,89,141,101,90,118,61,108,132,71,116,73,150,113,122,120,102,123,87,106,94,145,108,125,113,75,152,127,101,76,75,108,90,141,102,82,59,80,97,112,116,73,95,88,88,75,98,80,106,106,163,65,74,90,103,89,69,90,49,61,66,100,81,89,114,74,74,71,76,69,111,114,119,72,84,100,91,74,49,61,110,47,77,102,116,72,76,88,121,71,41,72,62,86,110,82,83,68,43,81,70,56,46,68,89,49,60,59,95,66,92,65,78,61,79,59,73,55,49,74,63,68,89,48,65,78,57,61,61,52,95,69,26,48,71,52,82,69,43,41,43,96,65,48,62,47,92,41,58,65,52,56,67,32,58,55,70,24,59,53,90,71,47,67,57,38,63,42,53,80,55,42,59,61,46,31,36,31,45,40,62,82,58,31,85,63,48,50,33,38,54,66,55,27,39,11,48,78,56,57,32,48,39,44,45,67,35,54,31,52,52,32,46,71,50,53,31,65,33,48,37,27,21,38,47,34,41,51,59,57,43,22,35,21,41,23,35,27,30,33,27,38,14,50,43,26,22,39,23,43,29,62,30,28,51,17,42,35,28,29,31,24,32,15,33,24,19,27,56,27,44,36,25,14,28,21,32,12,33,21,23,24,42,39,45,26,12,33,29,20,35,26,16,33,11,47,39,20,11,21,13,40,37,26,17,20,26,47,16,37,30,22,28,27,22,20,14,9,13,16,43,25,27,12,30,19,18,13,11,24,34,41,32,18,20,21,22,13,21,10,33,30,29,40,9,19,19,25,22,6,19,23,8,31,30,35,21,13,16,14,34,11,7,6,22,36,15,34,12,18,13,32,10,16,20,34,18,10,17,9,18,21,13,19,5,12,22,16,6,25,4,9,10,5,21,20,14,9,19,10,8,9,6,31,15,15,24,15,13,15,16,15,6,13,22,15,9,10,4,10,15,12,10,24,12,14,5,13,2,6,5,16,8,3,5,15,3,8,7,3,2,2,4,4,2,22,5,4,12,6,12,6,8,14,3,5,8,7,10,9,11,12,10,8,7,5,6,2,5,7,8,9,4,14,2,2,1,2,2,4,10,5,9,3,3,7,15,3,6,6,2,2,4,4,10,3,1,8,1,4,3,2,2,4,10,7,5,8,3,4,7,2,6,2,2,0,9,1,1,1,1,22,6,4,2,6,1,1,4,1,2,2,8,1,1,2,0,3,4,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         'SR':[114.42,97.66,137.37,100.72,97.53,97.38,104.4,111.62,136.96,96.44,160.3,102.46,122.48,130.12,80.57,93.75,131.08,111.69,57.57,102.71,144.61,107.51,79.13,86.66,114.64,103.52,71.84,101.19,106.28,78.3,84.61,78.19,57.69,79.22,77.94,108.9,77.33,95.09,94.47,96.83,71.29,81.21,104.28,122.03,101.4,167.44,103.64,111.02,92.76,118.48,72.77,103.75,121.23,100.74,95.71,91.09,96.35,76.74,70.49,95.55,111.2,65.97,100.78,113.39,81.29,90,75.3,114.67,67.39,124,67.21,88.48,84.24,105.12,93.18,72.61,131.18,88.32,102.54,95.23,95.2,195.08,128.26,114.56,104.42,111.42,80,86.56,75.81,70.55,65.71,60.1,79.43,113.26,70.7,72.07,85.27,79.71,101.85,74.14,69.87,100.92,67.92,79.41,100.95,62.13,85.95,121.17,78.03,100,72.02,100.99,72.85,60.84,104.12,125,83.33,103.12,103.15,88.28,105.49,83.33,80.5,87.96,105.61,66.66,93.06,103.33,77.11,149.18,84.25,68.18,125.35,76.72,121.91,58.66,77.87,72.13,72.5,85.29,70.73,98.85,81.13,91.48,58.62,78.7,67.2,74.33,110.66,54.6,64.56,81.18,107.89,106.66,74.07,88.88,56.02,76.47,95.12,132.2,96.25,79.38,68.75,66.37,104.1,78.94,85.22,82.95,97.33,73.46,90,66.98,66.98,43.55,107.69,94.59,76.66,66.99,77.52,98.55,75.55,138.77,111.47,103.03,67,82.71,75.28,57.89,89.18,89.18,92.95,85.52,92.75,57.65,55.26,52.94,87.5,75,62,68.13,83.78,126.53,100,54.54,127.65,77.92,58.82,51.72,81.94,77.63,67.04,48.76,83.09,143.9,80.55,93.54,67.44,51.81,69.51,67.46,82.35,130.23,69.13,80,98.21,119.56,80.88,61.79,112.24,91.66,91.52,55.78,80.3,57.6,80,66.66,85.24,65.82,88.13,71.23,94.54,104.08,68.91,80.95,75,56.17,104.16,76.92,62.82,85.96,80.32,80.32,94.23,51.57,71.01,184.61,100,67.6,92.3,57.31,68.11,109.3,114.63,109.3,48.95,70.76,93.75,72.58,95.74,47.82,107.31,75.86,67.69,84.61,78.57,64.17,134.37,74.13,76.36,60,175,71.18,79.24,46.66,57.74,87.23,61.19,71.92,105.26,63.49,95.23,73.58,48.75,70.9,92.85,66.1,63.93,82.6,122.58,105.55,122.58,84.44,95,59.67,45.12,63.79,119.35,42.35,57.14,75,72,109.09,94.73,64.81,53.03,63.63,129.62,89.74,318.18,72.91,43.58,60.71,59.64,106.25,70.83,87.17,77.27,73.33,49.25,94.28,61.11,106.45,61.53,61.53,100,69.56,45.07,64,60.37,100,47.69,93.93,64.58,83.78,114.81,147.61,78.94,63.82,88.23,73.17,56.86,49.15,50.87,67.44,131.81,80,133.33,65.85,117.39,77.14,100,86.66,78.78,96.29,68.42,185.71,50,58.13,96.15,113.63,64.1,108.69,58.13,86.2,40.32,83.33,85.71,47.05,141.17,54.76,65.71,82.14,79.31,74.19,95.83,71.87,146.66,66.66,91.66,115.78,77.77,37.5,77.77,47.72,58.33,84,142.85,71.42,95.23,62.5,166.66,60.6,95.23,86.95,79.16,45.23,48.71,42.22,73.07,150,54.54,62.06,90,51.42,69.23,112.5,54.54,163.63,38.29,46.15,90,163.63,80.95,130.76,42.5,45.94,65.38,100,85,65.38,36.17,106.25,45.94,53.33,72.72,57.14,59.25,72.72,75,107.14,166.66,115.38,93.75,34.88,56,51.85,116.66,46.66,73.68,77.77,107.69,127.27,58.33,41.17,34.14,43.75,77.77,70,66.66,63.63,100,61.9,130,39.39,43.33,44.82,32.5,133.33,63.15,63.15,48,54.54,200,63.15,52.17,150,38.7,36.66,31.42,52.38,84.61,68.75,78.57,32.35,100,157.14,183.33,50,30.55,73.33,29.41,83.33,55.55,76.92,31.25,100,62.5,50,29.41,55.55,100,58.82,100,50,42.85,69.23,47.36,160,66.66,36.36,50,133.33,32,200,88.88,80,160,38.09,40,57.14,88.88,36.84,70,87.5,77.77,116.66,22.58,46.66,46.66,29.16,40,46.15,40,37.5,40,100,46.15,27.27,40,66.66,60,150,50,33.33,41.66,50,20.83,41.66,35.71,100,38.46,250,83.33,100,31.25,62.5,166.66,100,26.66,133.33,50,57.14,133.33,200,200,100,100,200,18.18,80,100,25,50,25,50,37.5,21.42,100,60,37.5,42.85,30,33.33,27.27,25,30,37.5,28.57,40,33.33,100,40,28.57,25,22.22,50,14.28,100,100,200,100,100,50,20,40,22.22,66.66,33.33,14.28,6.66,33.33,16.66,16.66,50,50,25,25,10,33.33,100,12.5,100,25,33.33,50,50,25,10,14.28,20,12.5,33.33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         '100':[2,1,2,2,2,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         '50':[1,2,0,0,0,2,1,1,1,0,0,1,1,0,2,2,2,1,1,1,0,1,2,2,0,1,1,0,2,2,1,1,2,2,1,1,1,0,0,1,2,1,2,0,0,0,1,0,2,1,1,1,1,0,1,0,0,2,1,1,0,2,0,0,2,2,0,1,2,2,1,1,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,0,0,1,1,0,0,0,1,1,1,0,0,0,1,0,1,0,1,0,1,1,1,1,1,0,0,1,0,0,1,1,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         '0':[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,1,2,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,1,1,2,1,1,0,1,1,0,1,1,2,1,1,0,0,1,0,1,1,1,1,1,1,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         '4s':[45,27,26,28,26,12,18,29,24,24,24,20,30,16,18,16,24,26,19,17,19,20,17,14,23,15,12,22,12,20,15,12,15,15,14,19,17,22,9,18,14,10,15,11,6,17,13,12,13,12,13,12,10,12,15,18,10,13,17,12,6,13,11,13,11,14,8,14,3,7,15,9,13,12,11,9,19,13,14,14,17,15,15,10,13,10,10,12,10,8,11,14,13,6,8,11,16,11,11,8,9,9,11,12,16,9,11,9,16,5,8,15,11,13,5,11,17,5,10,4,9,6,7,6,10,6,7,5,9,6,11,6,15,7,7,8,7,8,7,11,4,8,11,11,12,5,6,9,6,10,10,12,6,3,8,13,7,9,6,7,7,9,8,3,3,4,9,1,5,3,11,9,6,3,5,8,10,9,9,9,4,10,7,7,8,9,5,6,10,6,9,10,3,5,7,4,5,9,10,6,3,5,3,6,8,4,11,6,7,4,10,7,7,1,4,4,6,5,7,7,3,1,8,8,10,6,5,7,4,2,9,5,4,3,6,5,6,5,3,4,6,5,4,4,4,5,6,4,2,3,5,4,4,5,4,5,7,0,2,2,5,5,9,4,3,3,6,2,7,2,3,6,4,5,5,2,4,3,4,4,4,5,3,4,2,7,6,3,2,2,3,4,2,3,3,5,6,2,4,3,6,4,5,2,2,4,5,2,4,3,2,3,4,2,4,3,3,5,4,3,4,3,2,3,4,4,3,4,5,4,3,5,7,5,1,4,1,2,1,3,2,1,2,2,2,4,2,3,4,2,4,1,2,2,3,3,4,4,1,3,2,2,5,1,1,2,1,1,3,3,4,1,2,0,4,2,1,2,2,1,2,4,1,1,2,0,2,4,3,4,4,0,3,1,3,2,1,3,2,0,1,2,4,1,0,1,1,0,2,0,4,2,3,2,1,1,3,2,3,0,3,1,0,4,3,0,3,0,1,0,1,0,2,1,1,1,1,0,2,0,1,2,1,1,1,2,0,1,1,0,1,1,2,0,1,1,0,1,1,1,2,2,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,1,2,0,0,2,0,1,2,2,1,1,0,1,1,1,1,1,0,2,1,2,0,0,1,1,0,1,2,1,0,1,2,0,0,0,0,1,0,1,2,1,0,1,2,0,1,0,1,1,0,0,1,1,0,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,1,0,1,1,1,0,0,1,1,0,1,0,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
#         '6s':[18,6,9,4,6,17,10,5,8,8,10,3,2,15,6,2,12,2,2,7,11,10,1,1,3,2,1,5,12,0,3,6,0,0,5,8,1,1,2,2,2,7,4,7,7,5,7,6,0,3,2,4,4,4,2,0,5,0,0,4,9,0,3,2,0,4,4,2,5,5,3,7,0,4,4,3,4,3,3,0,3,5,2,4,3,3,4,1,2,0,1,0,1,2,1,0,0,1,0,3,2,4,2,3,3,0,4,5,1,5,3,1,1,3,4,2,1,7,5,2,1,2,4,4,2,1,1,4,3,4,1,1,2,1,5,2,1,1,1,0,2,4,1,1,0,2,1,2,2,1,0,0,3,4,0,0,0,3,3,6,1,1,2,2,4,0,0,1,1,1,0,0,1,0,1,1,0,0,1,2,3,2,4,1,1,2,1,2,1,2,3,0,2,0,0,1,1,1,0,2,4,4,4,1,2,0,0,0,0,0,0,0,0,6,2,2,2,1,1,0,4,5,0,0,0,1,0,0,2,2,0,1,2,0,0,1,0,1,0,0,0,2,1,0,1,0,3,1,0,1,0,1,1,1,1,3,0,3,3,0,1,1,0,1,2,2,0,1,1,0,1,0,0,0,1,1,2,1,0,0,2,1,1,0,1,0,0,0,1,1,2,0,1,1,2,0,0,1,3,0,1,1,0,1,0,0,1,0,0,0,1,1,0,1,0,2,2,1,3,1,0,1,0,2,0,0,1,1,0,0,0,0,0,0,1,0,0,2,0,1,0,2,0,2,2,1,0,1,0,1,0,0,0,1,1,1,0,1,2,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,0,1,2,0,1,0,0,1,0,0,0,0,1,0,0,2,2,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,1,0,0,0,0,2,0,1,0,2,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,2,1,0,0,0,1,1,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],

#         # Include all features from your dataset
#         'Opposition Team': ['New Zealand, P.N.G., Sri Lanka, Sri Lanka, Nepal, Nepal, South Africa, England, Netherlands, India, Bangladesh, England, Sri Lanka, P.N.G., Namibia, England, India, South Africa, Nepal, South Africa, India, New Zealand, U.A.E., New Zealand, England, Zimbabwe, U.A.E., India, Nepal, U.A.E., Namibia, Scotland, Nepal, Pakistan, Scotland, Namibia, New Zealand, Bangladesh, England, Pakistan, New Zealand, U.A.E., Ireland, West Indies, South Africa, Ireland, Sri Lanka, India, England, Ireland, Zimbabwe, India, England, Australia, P.N.G., Nepal, Namibia, Sri Lanka, U.A.E., New Zealand, Nepal, Scotland, Zimbabwe, Bangladesh, Netherlands, Sri Lanka, Bangladesh, Sri Lanka, Nepal, England, U.A.E., South Africa, Afghanistan, South Africa, U.S.A., U.A.E., Nepal, Zimbabwe, India, Netherlands, India, West Indies, Nepal, South Africa, India, India, Nepal, P.N.G., Australia, Zimbabwe, Scotland, U.A.E., Sri Lanka, Bangladesh, India, England, Netherlands, Sri Lanka, Ireland, Bangladesh, Nepal, New Zealand, Namibia, P.N.G., U.A.E., Nepal, U.A.E., South Africa, New Zealand, Pakistan, Namibia, South Africa, Namibia, U.A.E., England, Ireland, Namibia, Nepal, Scotland, Ireland, Netherlands, Australia, U.A.E., Bangladesh, Sri Lanka, Ireland, India, Afghanistan, Namibia, Netherlands, Nepal, England, India, Australia, New Zealand, Namibia, India, U.A.E., Zimbabwe, Netherlands, Australia, South Africa, U.A.E., U.A.E., Namibia, Nepal, Nepal, P.N.G., New Zealand, Nepal, P.N.G., Netherlands, New Zealand, England, India, South Africa, Australia, South Africa, South Africa, Bangladesh, Zimbabwe, India, India, Scotland, Bangladesh, Ireland, Zimbabwe, P.N.G., Pakistan, Pakistan, India, Scotland, England, Namibia, England, Afghanistan, India, England, Scotland, England, U.S.A., Afghanistan, Namibia, Ireland, U.S.A., Ireland, Bangladesh, Namibia, New Zealand, Australia, South Africa, South Africa, New Zealand, Nepal, Nepal, Nepal, Nepal, Namibia, India, India, Scotland, Nepal, Namibia, P.N.G., West Indies, Pakistan, Nepal, U.A.E., India, Namibia, Scotland, P.N.G., Afghanistan, U.A.E., Bangladesh, Pakistan, Zimbabwe, Nepal, Australia, Ireland, Bangladesh, South Africa, Netherlands, U.S.A., Pakistan, New Zealand, U.A.E., U.A.E., Sri Lanka, P.N.G., Bangladesh, P.N.G., Sri Lanka, Nepal, Bangladesh, Namibia, England, India, Zimbabwe, P.N.G., Australia, Sri Lanka, Scotland, South Africa, P.N.G., U.S.A., South Africa, Sri Lanka, P.N.G., Australia, Ireland, P.N.G., Sri Lanka, Zimbabwe, Bangladesh, West Indies, West Indies, South Africa, South Africa, Namibia, England, Afghanistan, India, South Africa, Namibia, Nepal, Bangladesh, India, P.N.G., U.S.A., England, U.S.A., Netherlands, Sri Lanka, Scotland, India, Australia, U.A.E., Namibia, Namibia, Zimbabwe, Bangladesh, P.N.G., Scotland, Namibia, Nepal, Namibia, Bangladesh, Namibia, Nepal, Netherlands, India, U.S.A., Scotland, Sri Lanka, India, Australia, India, India, U.S.A., P.N.G., India, Namibia, P.N.G., India, Namibia, Australia, Nepal, Namibia, South Africa, Sri Lanka, England, New Zealand, Namibia, New Zealand, P.N.G., Netherlands, England, Nepal, India, U.A.E., Nepal, Sri Lanka, U.A.E., Namibia, Bangladesh, P.N.G., India, Nepal, England, Zimbabwe, South Africa, U.S.A., India, Sri Lanka, Namibia, U.A.E., Namibia, Nepal, Namibia, P.N.G., Australia, Bangladesh, New Zealand, P.N.G., Afghanistan, Australia, New Zealand, India, U.A.E., Scotland, P.N.G., Namibia, Bangladesh, New Zealand, Australia, Netherlands, P.N.G., Nepal, Bangladesh, P.N.G., India, India, India, Nepal, Zimbabwe, South Africa, U.A.E., West Indies, Netherlands, New Zealand, South Africa, U.A.E., England, U.S.A., India, U.A.E., Scotland, Ireland, South Africa, Nepal, India, Zimbabwe, India, South Africa, P.N.G., U.S.A., India, Namibia, West Indies, Afghanistan, Nepal, Nepal, P.N.G., India, Namibia, Ireland, England, P.N.G., Namibia, Namibia, Nepal, Namibia, Sri Lanka, U.S.A., South Africa, England, Namibia, P.N.G., England, New Zealand, South Africa, Netherlands, Bangladesh, U.A.E., Ireland, New Zealand, India, Scotland, Namibia, South Africa, New Zealand, India, Scotland, Netherlands, U.S.A., New Zealand, West Indies, New Zealand, West Indies, Nepal, India, Scotland, Scotland, South Africa, India, South Africa, India, Sri Lanka, Zimbabwe, U.S.A., Namibia, Pakistan, Nepal, India, U.A.E., Namibia, Namibia, India, Australia, South Africa, Australia, Namibia, Scotland, New Zealand, P.N.G., U.S.A., P.N.G., India, Nepal, Bangladesh, New Zealand, Nepal, Sri Lanka, England, Scotland, U.S.A., New Zealand, Australia, India, New Zealand, Netherlands, Zimbabwe, U.S.A., West Indies, Ireland, Bangladesh, Bangladesh, Scotland, Bangladesh, Netherlands, Nepal, New Zealand, Bangladesh, Namibia, Ireland, U.A.E., Namibia, Namibia, Nepal, Namibia, Zimbabwe, Scotland, P.N.G., Australia, Sri Lanka, New Zealand, Scotland, Nepal, Sri Lanka, Australia, India, New Zealand, Nepal, India, Scotland, P.N.G., Zimbabwe, India, New Zealand, Namibia, P.N.G., South Africa, Zimbabwe, New Zealand, India, Afghanistan, U.A.E., U.S.A., U.S.A., South Africa, England, England, Sri Lanka, Ireland, Nepal, Pakistan, South Africa, Australia, Nepal, South Africa, Zimbabwe, New Zealand, Scotland, U.S.A., Zimbabwe, U.A.E., U.A.E., Sri Lanka, P.N.G., West Indies, Sri Lanka, Bangladesh, Namibia, Scotland, Namibia, Bangladesh, Nepal, U.A.E., Netherlands, India, England, Netherlands, India, U.A.E., U.S.A., Nepal, U.A.E., Namibia, Sri Lanka, Netherlands, Bangladesh, Namibia, New Zealand, New Zealand, Sri Lanka, West Indies, South Africa, South Africa, Australia, Sri Lanka, U.S.A., South Africa, Netherlands, P.N.G., Australia, P.N.G., Bangladesh, U.A.E., Australia, Nepal, Australia, Scotland, Bangladesh, Afghanistan, India, U.S.A., Bangladesh, Zimbabwe, Namibia, Ireland, South Africa, Sri Lanka, New Zealand, P.N.G., Afghanistan, Ireland, New Zealand, Ireland, Sri Lanka, P.N.G., England, Bangladesh, India, Nepal, New Zealand, Nepal, West Indies, Bangladesh, Namibia, England, Pakistan, India, West Indies, Namibia, New Zealand, Namibia, U.S.A., South Africa, Nepal, Bangladesh, Ireland, Nepal, Sri Lanka, Ireland, Netherlands, Scotland, England, U.A.E., South Africa, Namibia, Sri Lanka, South Africa, U.A.E., India, India, India, Sri Lanka, U.A.E., South Africa, South Africa, Afghanistan, Namibia, Ireland, New Zealand, Namibia, England, New Zealand, India, India, P.N.G., Bangladesh, Nepal, West Indies, New Zealand, Namibia, Pakistan, England, Namibia, Bangladesh, Australia, U.A.E., Namibia, England, P.N.G., England, India, Sri Lanka, England, Zimbabwe, Ireland, India, Afghanistan, Zimbabwe, P.N.G., Nepal, Ireland, England, India, Zimbabwe, P.N.G., Ireland, New Zealand, U.A.E., Zimbabwe, P.N.G., P.N.G., India, England, Bangladesh, Ireland, Netherlands, Ireland, India, New Zealand, South Africa, U.A.E., Namibia, P.N.G., England, P.N.G., India, Netherlands, P.N.G., South Africa, P.N.G., India, Netherlands, Nepal, India, Australia, South Africa, Sri Lanka, P.N.G., India, South Africa, Sri Lanka, Bangladesh'],
#         'Player Name': ['Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,Aasif Sheikh,SS Iyer,MA Leask,L Louwrens,AT Nidamanuru, Kohli,C Madande,Rahmanullah Gurbaz,DJ Malan,Najibullah Zadran,MG Erasmus,DA Miller,K Doriga,Ishan Kishan,P Nissanka,JJ Roy,A ala,DS Airee,HG Munsey,A Balbirnie,MD Shanaka,SC Williams,FH Allen,H Klaasen,ZE Green,S Samson,MJ Santner,DA Miller,Aayan Afzal Khan,MD Patel,KL Rahul,CN Ackermann,DS Airee,RK Paudel,WA Young,JC Buttler,Mahmudullah,Najmul Hossain Shanto,W Madheere,KL Rahul,Shakib Al Hasan,SS Iyer,A ala,Washington Sundar,Aasif Sheikh,SR Taylor,Kushal Malla,A Sharafu,K Bhurtel,MM Ali,S Dhawan,GD Phillips,A ala,BA King,G Singh,G Malla,AK Markram,RP Burl,KJ Coetzer,N anua,Kushal Malla,Najmul Hossain Shanto,T Bauma,SW Billings,H Hiri,KL Rahul,SS Iyer,I Kaia,KS Williamson,KIC Asalanka,B McMullen,DA Miller,TP Ura,Mushfiqur Rahim,TM Head, Kohli,SA Yada,RD Berrington,AK Markram,A ala,ST Doheny,CR Erine,JM ince,HC Brook,TP Ura,M an Lingen,CM McBride,B McMullen,Aryan Lakra,MG Erasmus,Agha Salman,K Doriga, Araind,GS Ballance,HH Pandya,MR Marsh,Shakib Al Hasan,Shubman Gill,RA Jadeja,Musa Ahmed,N Pooran,RG Sharma,SA Edwards,RR Hendricks,Litton Das,JN Loftie0Eaton,AR Patel,GS Ballance,TLW Cooper,Aaron Jones,MJ Santner,DJ Mitchell,P Nissanka,ZE Green,Mahmudullah,CP Rizwan,M Labuschagne,BKG Mendis,MNK Fernando,Tamim Iqbal,HN Ya France,Q de Kock,MG Erasmus,PW Hasaranga,Kushal Malla,Sikandar Raza,D la Cock,Tamim Iqbal,Washington Sundar,K Doriga,P Nissanka,HH Pandya,ikramjit Singh,MP ODowd,Haris Sohail,CP Rizwan,S Bau,H Hiri,JN Loftie0Eaton,TP Ura,JN Malan,HM Nicholls,JJ Smit,HN Ya France,MA Leask,Aryan Lakra,M Jansen,TWM Latham,L Louwrens,A Saud,Q de Kock,IG Holland,G Malla,CP Rizwan,MD Shanaka,N anua,MM Ali,MG Bracewell,PR Stirling,MH Cross,Shubman Gill,CJ Chibhabha,SM Curran,SM Curran,HE an der Dussen,M an Lingen,FH Allen, Kohli,S Lamichhane,L Louwrens,Mohammad Nabi,R Trumpelmann,PD Salt,Asif Khan,DJ Mitchell,CA Soper,C Campher,MH Cross,RR Hendricks,GD Phillips,Shariz Ahmad,B Sharki,DJ Willey,FH Allen,Gulsan Jha,JO Holder,RK Paudel,L Louwrens,KR Mayers,HH Pandya,Aarif Sheikh,LA Dawson,CR Erine,Kushal Malla,R Raindra,ikramjit Singh,JM ince,Q de Kock,T de Zorzi,AT Nidamanuru,R Powell,Aaron Jones,Afif Hossain,LD Chandimal,DM de Sila,SA Edwards,A Saud,Basil Hameed,GH Dockrell,DJ Mitchell,M an Lingen,H Hiri,M Jansen,JN Loftie0Eaton,WP Masakadza,HM Nicholls,BM Scholtz,M Labuschagne,RG Sharma,G Toka,DS Airee,S Bau,GH Dockrell,ST Doheny,S Lamichhane,Sompal Kami,Aarif Sheikh,KJ Coetzer,SJ Modani,CR Woakes,NP Kenjige,R Hekure,Sikandar Raza,KIC Asalanka,K Doriga,Karan KC,GD Phillips,CAK Rajitha,JJ Roy,AT Carey,PW Hasaranga,R Hekure,L Louwrens,BKG Mendis,NK Patel,DS Airee,Mushfiqur Rahim,MD Patel,PD Salt,CJA Amini, Araind,W Barresi,Gulbadin Naib,WD Parnell,S Samson,Aayan Afzal Khan,C Karunaratne,D la Cock,R Ngaraa,Taskin Ahmed,R Trumpelmann,DN Wellalage,CJA Amini,RD Berrington,Hashmatullah Shahidi,R Hekure,TSS Mackintosh,LJ Tucker,Zahoor Khan,Anamul Haque,K Birkenstock,AT Carey,Musa Ahmed,SN Thakur,S Bau,C Karunaratne,AR Patel,Shayan Jahangir,CA Soper,SR Taylor,MRJ Watt,S Jora,SJ Modani,AR Patel,AU Rashid,MD Shanaka,G Singh,DN Wellalage,JC Buttler,Ishan Kishan,MP Stoinis,R Trumpelmann,Aasif Sheikh,KP Meiyappan,Rohan Mustafa,PR Stirling,SN Thakur,MM Ali,H Klaasen,Aayan Afzal Khan,Ahmed Raza,WG Jacks,Shayan Jahangir,SA Abbott,WIA Fernando,JP Inglis,J Jaris,PA an Meekeren,S Dhawan,Karan KC,AK Markram,B Muzarabani,RR Pant,AU Rashid,Sompal Kami,MP Stoinis,TP Ura,Yasir Ali,ZE Green,D la Cock,Yasir Ali,BM Duckett,CN Greaes,Mustafizur Rahman,LJ Tucker,DA Warner,CR Woakes,HN Ya France,JJ Smit,SPD Smith,Sompal Kami,HE an der Dussen,DM de Sila,Hazrat Bilal,D la Cock,G Malla,Najmul Hossain Shanto,MRJ Watt,B Eans,C Green,ZE Green,Gulsan Jha,Karan KC,TSS Mackintosh,LR Naylor,Rashid Khan,JN Frylinck,RD Gaikwad,Mehidy Hasan Miraz,KP Meiyappan,Zawar Farid,AC Agar,KIC Asalanka,SSJ Brooks,RP Burl,S Dhawan,MG Erasmus,C Madande,AD Mathews,Nasum Ahmed,A Saud,SM Sharif,OF Smith,Usama Mir,AC Agar,K Bhurtel,Q de Kock,ZE Green,Imam0ul0Haq,DA Miller,Mohammad Wasim,RD Rickelton, Sukumaran,Taskin Ahmed,R Trumpelmann,Aarif Sheikh,A Dutt,LH Ferguson,AJ Hosein,WD Parnell,CJ Bowes,A Dutt,K Morea,CB Sole,TG Southee,G Toka,Afif Hossain,S Fouche,CN Greaes,H Hiri,M Jansen,CJ Jordan,AS Joseph,Mohammed Shami,Muhammad Waseem,LN Rajbanshi,CAK Rajitha,Rohan Mustafa,BM Scholtz,A Sharafu,MA Starc,AC althapa,MR Adair,DM de Sila,JN Frylinck,TWM Latham,Taijul Islam,M an Lingen,N anua,DL Chahar,SM Curran,C Green,DJ Hooda,I Kaia,FJ Klaassen,A Nao,L Ngidi,Taskin Ahmed,SN Thakur,A Balbirnie,K Birkenstock,DL Chahar,M Jansen,KP Meiyappan,Mohammad Nawaz,Mohammed Siraj,A Nao,Nasum Ahmed,Pratis GC,LN Rajbanshi,CA Soper,HG are,Asif Khan,C Campher,S Fouche,JN Frylinck,Kuldeep Yada,Kuldeep Yada,CBRLS Kumara,T Lungameni,SM Sharif,IS Sodhi,L Wood,A Zampa,Arshdeep Singh,SI Kamea,CBRLS Kumara,S Lamichhane,Sompal Kami,MR Adair,T Bauma,YS Chahal,Junaid Siddique,Karan KC,R Klein,R Klein,Kuldeep Yada,GJ Maxwell,CAK Rajitha,H Shah,CA Soper,R Trumpelmann,DJ Willey,Litton Das,SSB Magala,Mohammed Siraj,M Nyauchi,Sabir Ali,IS Sodhi,PA an Meekeren,CR Woakes,Zahoor Khan,Y Cariah,M Commins,MNK Fernando,S Jora,T Lungameni,AR McBrine,K Morea,LN Rajbanshi,HB Shipley,JJ Smit,T Stubbs,BM Tickner,JC Archer,Chirag Suri,S Dhakal,R Hekure,GI Hume,Junaid Siddique,JN Loftie0Eaton,SSB Magala,KA Maharaj,L Ngidi,A Nortje,AL Phehlukwayo,BM Scholtz,L Siaka,CB Sole,HG are,CJA Amini,TA Blundell,TL Chatara,MJ Humphreys,Jasdeep Singh,D Madushanka,Mohammad Hasnain,Mohammed Shami,WD Parnell,Rai Bishnoi,Shariz Ahmad,OP Stone,SA Yada,CJA Amini,Aesh Khan,B Eans,IG Holland,Ishan Kishan,Junaid Siddique,Kuldeep Yada,T Lungameni,Mohammed Siraj,A Nao,AU Rashid,B Shikongo,HT Tector,M Theekshana,BM Tickner,G Toka,Rehan Ahmed,W Barresi,RN Bhatia,TL Chatara,TLW Cooper,Fazalhaq Farooqi,PW Hasaranga,Hazrat Bilal,D Lakshan,W Madheere,Mohammed Shami,R Ngaraa,Noor Ahmad,NK Patel,K Rabada,KR Sen,HB Shipley,JJ Smit,Umran Malik,Zawar Farid,G Coetzee,GJ Delany,S Dhakal,Ebadot Hossain,LH Ferguson,BC Fortuin,BC Fortuin,Hamza Tahir,Haris Rauf,Hazrat Bilal,SI Kamea,J Kingma,T Lungameni,AR McBrine,WP Masakadza,K Morea,Mujeeb Ur Rahman,Mustafizur Rahman,L Ngidi,H Shah,T Shamsi,B Shikongo,OP Stone,N anua,Yamin Ahmadzai,JC Archer,K Birkenstock,JA Duffy,Ebadot Hossain,Hasan Mahmud,MJ Henry,SI Kamea,FJ Klaassen,Kuldeep Yada,CBRLS Kumara,S Lamichhane,T Marumani,BKG Mendis,K Morea,Mustafizur Rahman,Naseem Shah,L Ngidi,A Nortje,Sabir Ali,Shahbaz Ahmed,BM Scholtz,T Shamsi,Shan Masood,A Sharafu,HB Shipley,MA Starc,G Toka,Umran Malik,SA Yada,HN Ya France,Zahoor Khan,A Zampa,NP Kenjige,SA Abbott,KNA Bandara,YS Chahal,PJ Cummins,GJ Delany,Ebadot Hossain,NT Ellis,AM Fernando,BD Gloer,Gulsan Jha,Hamza Tahir,Hasan Mahmud,JR Hazlewood,MJ Henry,GI Hume,Jasdeep Singh,LM Jongwe,Kamran Ghulam,J Kariko,JB Little,JN Loftie0Eaton,T Lungameni,D Madushanka,KA Maharaj,S Mahmood,B Mauta,B Mauta,Mehidy Hasan Miraz,AF Milne,Mohammed Siraj,Mohammed Siraj,A Nao,SN Netraalkar,SN Netraalkar,A Nortje,Pratis GC,K Rabada,K Rabada,LN Rajbanshi,Shahbaz Ahmed,BM Scholtz,T Shamsi,T Shamsi,B Shikongo,TG Southee,SN Thakur,RJW Topley,Umran Malik,AC althapa,JDF andersay,Washington Sundar,Washington Sundar' ]
#     }
#     input_data = pd.DataFrame(data)
    
#     # Filter the input data based on the specified player and opposition team
#     player_performance = input_data[(input_data['Player Name'] == player_name) & (input_data['Opposition Team'] == opposition_team)]
    
#     if player_performance.empty:
#         return "No data available for the specified player and opposition team", ""
    
#     # Perform prediction
#     recommended_player = model.predict(player_performance)  # Assuming the model returns the recommended player
    
#     reason = "Highest average runs against the specified opposition team"  # Provide a reason based on your criteria
    
#     return recommended_player, reason


# @app.route('/')
# def home():
#     return render_template('home.html')

# @app.route('/form', methods=['GET', 'POST'])
# def form():
#     if request.method == 'POST':
#         # Retrieve form data
#         player_name = request.form['player_name']
#         opposition_team = request.form['opposition_team']
        
#         # Perform prediction
#         recommended_player, reason = get_recommendation(player_name, opposition_team)
        
#         # Redirect to result page with prediction
#         return redirect(url_for('result', player=recommended_player, reason=reason))
#     return render_template('form.html')



# @app.route('/result')
# def result():
#     player = request.args.get('player')
#     reason = request.args.get('reason')
#     return render_template('result.html', player=player, reason=reason)



# if __name__ == '__main__':
#     app.run(debug=True)
